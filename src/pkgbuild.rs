use std::fs::DirEntry;
use std::io::Write;

use srtemplate::SrTemplate;

use crate::error::Error;
use crate::metadata::Config;


/// Write a legal PKGBUILD to some `Write` instance (a `File` in this case).
pub fn pkgbuild<T>(
    ctx: SrTemplate,
    mut file: T,
    config: &Config,
    sha256: &str,
    license: &[DirEntry],
) -> Result<(), Error>
where
    T: Write,
{
    let package = &config.package;
    let authors = package
        .authors
        .iter()
        .map(|a| format!("# Maintainer: {}", a))
        .collect::<Vec<_>>()
        .join("\n");
    let source = package
        .git_host()
        .unwrap_or_default()
        .source(&ctx, &config.package)?;

    println!("Source: {:?}", package.git_host());

    writeln!(file, "{}", authors)?;
    writeln!(file, "#")?;
    writeln!(
        file,
        "# This PKGBUILD was generated by `cargo aur`: https://crates.io/crates/cargo-aur"
    )?;
    writeln!(file)?;
    writeln!(file, "pkgname={}", ctx.render(&package.template_name())?)?;
    writeln!(file, "pkgver={}", package.version)?;
    writeln!(file, "pkgrel=1")?;
    writeln!(file, "pkgdesc=\"{}\"", package.description)?;
    writeln!(file, "url=\"{}\"", package.homepage)?;
    writeln!(file, "license=(\"{}\")", package.license)?;
    writeln!(file, "arch=(\"x86_64\")")?;
    writeln!(file, "provides=(\"{}\")", package.name)?;
    writeln!(file, "conflicts=(\"{}\")", package.name)?;

    if let Some(metadata) = package.metadata.as_ref() {
        writeln!(file, "{}", metadata)?;
    }

    writeln!(file, "source=(\"{}\")", source)?;
    writeln!(file, "sha256sums=(\"{}\")", sha256)?;
    writeln!(file)?;
    writeln!(file, "package() {{")?;
    writeln!(
        file,
        "    install -Dm755 {} -t \"$pkgdir/usr/bin\"",
        config.binary_name()
    )?;

    for lic in license {
        let file_name = lic
            .file_name()
            .into_string()
            .map_err(|_| Error::Utf8OsString)?;
        writeln!(
            file,
            "    install -Dm644 {file_name} \"$pkgdir/usr/share/licenses/$pkgname/{file_name}\"",
        )?;
    }

    writeln!(file, "}}")?;
    Ok(())
}
